/*
  Code is performing to take user input and converting into morse code.

  Code referred from:
  https://www.instructables.com/Arduino-Morse-Code/
  https://www.norwegiancreations.com/2017/12/arduino-tutorial-serial-inputs/

*/
// initialization of variables
int LED = 13;
int Dot = 250;
int Dash = Dot * 3;
int elemPause = Dot;
int wordPause = Dot * 5;

void setup() 
{
  // initialize digital pin LED as an output.
  pinMode(LED, OUTPUT);
  Serial.begin(9600);
  Serial.println("Enter input for morse code output:\nTo exit loop, enter \"*\"."); //Lets call this "A"

}

// the loop function runs over and over again forever.
void loop() 
{
  // do not place "A" here or it will go thru the loop and output over and over.
  // Will go thru loop when there is no input until an input is placed because Serial.available() always returns 0 if there is no input.
  if (Serial.available() != 0)
  { 
    // do not place "A" here or it will go thru the loop and output over and over.
    String stringToMorse = Serial.readString();
    // using .Trim() to remove leading/trailing white spaces.
    // If you dont use this, sentinel will not take because it thinks it has a space somewhere
    // SENTINEL EXIT
    stringToMorse.trim();
    if (stringToMorse == "*")
    {
      Serial.println("You have entered the sentinel \"*\". Exiting loop.");
    }

    //OUTPUTS MESSAGE IN MORSE CODE
    else
    {
      // Used below comment as a way to determine length was used properly
      // Was using size of() instead of .length(). sizeof() only gives 6 bytes which did not give me the full word...
      // Serial.println(stringToMorse.length());
      Serial.println("You have inputted \"" + stringToMorse + "\"");
      // use .length() not sizeof().
      for (int i =0; i < stringToMorse.length(); i++)
      {
        char input = stringToMorse[i];
        input = toLowerCase(input); // Set case to lower case.
        GetChar(input);
      }
      //turn off lights for long pause then asks input again.
      LightsOff(4000); 
      // Place "A" here so that it outputs only when there is an input
      Serial.println("Enter input for morse code output:\nTo exit loop, enter \"*\".");
    }
  }
}

// DOT CODE
void MorseDot()
{
  digitalWrite(LED, HIGH);
  delay(Dot);
}

// DASH CODE
void MorseDash()
{
  digitalWrite(LED, HIGH);
  delay(Dash);
}

//Turn Off code
void LightsOff(int delayTime)
{
  digitalWrite(LED, LOW);
  delay(delayTime);
}

//MORSE CODE INFO
void GetChar(char input)
{
  switch (input)
  {
    case 'a':
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'b':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'c':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'd':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'e':
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'f':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'g':
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'h':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);    
      break;
    case 'i':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'j':
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);  
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'k':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'l':
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'm':
      MorseDash();
      LightsOff (elemPause);  
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'n':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'o':
      MorseDash();
      LightsOff (elemPause);  
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'p':
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 'q':
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'r':
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 's':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case 't':
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'u':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'v':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'w':
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'x':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'y':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case 'z':
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case '1':
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case '2':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;
    case '3':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);    
      break;
    case '4':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);    
      break;
    case '5':
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);    
      break;
    case '6':
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case '7':
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);   
      break;
    case '8':
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);    
      break;
    case '9':
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDot();
      LightsOff (elemPause);
      break;
    case '0':
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      MorseDash();
      LightsOff (elemPause);
      break;  
    default:
      LightsOff(wordPause); // If nothing matches
  }
}
